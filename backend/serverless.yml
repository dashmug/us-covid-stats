service: us-covid-stats

configValidationMode: error

custom:
  pythonRequirements:
    dockerizePip: 'non-linux'
    slim: true

provider:
  name: aws
  runtime: python3.8
  stage: ${env:STAGE,'main'}
  region: ${env:AWS_REGION,'us-east-1'}
  logRetentionInDays: 1
  memorySize: 3008
  timeout: 20
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - Fn::GetAtt:
            - DataTable
            - Arn
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
      Resource:
        - Fn::GetAtt:
            - DataBucket
            - Arn
  environment:
    SERVICE_NAME: ${self:service}
    DATA_TABLE:
      Ref: DataTable
    DATA_BUCKET:
      Ref: DataBucket
  httpApi:
    payload: '2.0'
    cors: true
  tags:
    project: ${self:service}

plugins:
  - serverless-python-requirements

package:
  include:
    - '!**'
    - 'us_covid_stats/**'
  exclude:
    - '**/tests/**'
    - 'us_covid_stats/conftest.py'


functions:
  RefreshDataFromSources:
    handler: us_covid_stats/etl/handler.refresh_data_from_sources
    events:
      - schedule: rate(1 day)

  GetData:
    handler: us_covid_stats/rest/handler.get_data
    events:
      - httpApi:
          method: GET
          path: /data

resources:
  Resources:
    DataTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-Data
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        SSESpecification:
          SSEEnabled: true
    DataBucket:
      Type: AWS::S3::Bucket
    FrontendBucket:
      Type: AWS::S3::Bucket
    FrontendBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref FrontendBucket
        PolicyDocument:
          Statement:
            - Action: 's3:GetObject'
              Effect: Allow
              Resource: !Sub 'arn:aws:s3:::${FrontendBucket}/*'
              Principal:
                CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
    CloudFrontOriginAccessIdentity:
      Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: !Ref FrontendBucket
    FrontendDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - Id: s3origin
              DomainName: !GetAtt FrontendBucket.DomainName
              S3OriginConfig:
                OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
          Enabled: true
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 404
              ResponsePagePath: /404.html
          HttpVersion: http2
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: true
            DefaultTTL: 3600
            ForwardedValues:
              Cookies:
                Forward: none
              QueryString: false
            MaxTTL: 86400
            MinTTL: 60
            TargetOriginId: s3origin
            ViewerProtocolPolicy: 'redirect-to-https'
          PriceClass: PriceClass_100
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
    ReactAppBackendUrlParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: REACT_APP_BACKEND_URL
        Type: String
        Value: !Join [ '', [ 'https://', !Ref HttpApi, '.execute-api.', !Ref 'AWS::Region', '.', !Ref 'AWS::URLSuffix' ] ]
    FrontendBucketParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: FRONTEND_BUCKET
        Type: String
        Value: !Ref FrontendBucket
    FrontendDistributionParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Description: URL of the generated HTTP API.
        Name: FRONTEND_DISTRIBUTION
        Type: String
        Value: !Ref FrontendDistribution
  Outputs:
    DataBucketName:
      Value: !Ref DataBucket
    FrontendBucketName:
      Value: !Ref FrontendBucket
    FrontendDistributionId:
      Value: !Ref FrontendDistribution
    FrontendUrl:
      Value: !Join ['', ['https://', !GetAtt FrontendDistribution.DomainName]]
