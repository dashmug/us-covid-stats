name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2.3.3

      - name: Setup Virtualenv Cache
        uses: actions/cache@v2.1.2
        id: virtualenv-cache
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Set up Python 3.8
        uses: actions/setup-python@v2.1.3
        with:
          python-version: 3.8

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v3

      - name: Install Python Dependencies
        if: steps.virtualenv-cache.outputs.cache-hit != 'true'
        run: make venv

      - name: Lint with Flake8
        run: make flake8

      - name: Lint with Black
        run: make black_check

      - name: Checking type annotations
        run: make typecheck

      - name: Set up Node 12.x
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12.x'

      - name: Install Node dependencies
        run: make node_modules

      - name: Build serverless package
        run: make build
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2.3.3

      - name: Set up Node 12.x
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12.x'

      - name: Install Node dependencies
        run: make node_modules

      - name: Build frontend artifacts
        run: make build
